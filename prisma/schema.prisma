// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Post {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  createdBy   User   @relation(fields: [createdById], references: [id])
  createdById String

  @@index([name])
}

model User {
  id            String    @id @default(cuid())
  clerkId       String?
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  publicKey     String?
  posts         Post[]
  events        Event[]
  Wallet        Wallet[]

  @@index([email])
  @@index([publicKey])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Event {
  id             String      @id @default(cuid())
  name           String
  date           DateTime
  venue          String
  status         EventStatus @default(DRAFT)
  imageUrl       String?
  location       String?
  description    String?
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  organizerId    String?
  distributorKey String?
  organizer      User?       @relation(fields: [organizerId], references: [id])
  Asset          Asset[]

  @@index([organizerId])
}

enum EventStatus {
  DRAFT
  PUBLISHED
  CANCELLED
  CLOSED
  IN_PROGRESS
}

model Asset {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  address      String?
  label        String
  code         String
  issuer       String
  distributor  String
  type         String
  eventId      String
  pricePerUnit Decimal
  status       String   @default("ACTIVE")
  totalUnits   Int
  event        Event    @relation(fields: [eventId], references: [id])

  @@index([code, issuer])
  @@index([eventId])
  @@index([address])
}

model Wallet {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  address   String
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  @@index([address])
  @@index([userId])
}
